
package weightmachinedesktopapplication;


import com.google.gson.Gson;

import com.google.gson.JsonObject;


import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import java.io.InputStreamReader;

import java.io.OutputStream;

import java.net.HttpURLConnection;
import java.net.URL;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java.util.stream.Collectors;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author LENOVO
 */
public class PrintSlip extends javax.swing.JFrame {
    String printslipNo = null, tokenNo = null, gateNo = null, grossWeight = null, tareWeight = null, netWeight =
        null, party = null, vechileNo = null, vechileType = null, create = null, finaldate = null, charge =
        null, product = null, remarks = null,unit_Code=null,machine_code=null,comportNo=null,user_Name=null;
    /** Creates new form PrintSlip */
    public PrintSlip(String userName,String unitCode,String machinecode,String comport) {
        unit_Code=unitCode;
        machine_code=machinecode;
        comportNo=comport;
        user_Name=userName;
        initComponents();
    }
   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BtnLogOut = new javax.swing.JButton();
        jBtnBack = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        BtnPrint = new javax.swing.JPanel();
        TXT_SLIP_NO = new javax.swing.JTextField();
        BtnPrintSlipNo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TXT_GrossWeight = new javax.swing.JTextPane();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        TXT_TareWeight = new javax.swing.JTextPane();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        TXT_NetWeight = new javax.swing.JTextPane();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        TXT_VechileNo = new javax.swing.JTextField();
        TXT_TrollyNo = new javax.swing.JTextField();
        TXT_Part = new javax.swing.JTextField();
        TXT_Product = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        LBL_CreateTime = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TXT_CreateTime = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TXT_CreateDate = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        TXT_CreateBy = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TXT_TokenNo = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TXT_SlipNo = new javax.swing.JTextField();
        TXT_RC_NO = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        TXT_CHARGEAPPLED = new javax.swing.JTextPane();
        jScrollPane12 = new javax.swing.JScrollPane();
        TXT_VECHILE_TYPE = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TXT_FinealEnterTime = new javax.swing.JTextPane();
        TXT_FinealEnterBy = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        TXT_GateEntry = new javax.swing.JTextField();
        LBL_GateEntry = new javax.swing.JLabel();
        TXT_Process = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        TXT_Machine = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TXT_FinealEnterDate = new javax.swing.JTextPane();
        TXT_Charge = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButtonPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(13, 113, 188));

        jLabel1.setFont(new java.awt.Font("DejaVu Serif Condensed", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Weight Bridge");

        BtnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/weightmachinedesktopapplication/shutdown (1).png"))); // NOI18N
        BtnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLogOutActionPerformed(evt);
            }
        });

        jBtnBack.setLabel("Back");
        jBtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnBack)
                .addGap(30, 30, 30)
                .addComponent(BtnLogOut)
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnBack)
                    .addComponent(BtnLogOut))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(13, 113, 188));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Bharuwa solutions Pvt Ltd.");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(24, 24, 24))
        );

        BtnPrint.setBackground(new java.awt.Color(255, 255, 255));

        BtnPrintSlipNo.setText("Search");
        BtnPrintSlipNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintSlipNoActionPerformed(evt);
            }
        });

        jLabel2.setText("Slip No");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Gross Weight");

        TXT_GrossWeight.setEditable(false);
        TXT_GrossWeight.setBackground(new java.awt.Color(248, 245, 245));
        TXT_GrossWeight.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_GrossWeight.setEnabled(false);
        jScrollPane8.setViewportView(TXT_GrossWeight);

        jLabel19.setText("Tare Weight");

        TXT_TareWeight.setEditable(false);
        TXT_TareWeight.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_TareWeight.setEnabled(false);
        jScrollPane9.setViewportView(TXT_TareWeight);

        jLabel20.setText("Net Weight");

        TXT_NetWeight.setEditable(false);
        TXT_NetWeight.setEnabled(false);
        jScrollPane10.setViewportView(TXT_NetWeight);

        jLabel21.setText("Vehicle Number");

        jLabel22.setText("Trolly Number");

        jLabel23.setText("Party");

        jLabel24.setText("Product");

        TXT_VechileNo.setEditable(false);
        TXT_VechileNo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_VechileNo.setEnabled(false);

        TXT_TrollyNo.setEditable(false);
        TXT_TrollyNo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_TrollyNo.setEnabled(false);

        TXT_Part.setEditable(false);
        TXT_Part.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_Part.setEnabled(false);

        TXT_Product.setEditable(false);
        TXT_Product.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_Product.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(jLabel3)
                    .addComponent(jLabel22))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_VechileNo)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_TrollyNo)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TXT_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TXT_Part, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 21, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(TXT_VechileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(TXT_TrollyNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(TXT_Part, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(TXT_Product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Vechile Type");

        LBL_CreateTime.setText("Create Time");

        TXT_CreateTime.setEditable(false);
        TXT_CreateTime.setBackground(new java.awt.Color(204, 204, 204));
        TXT_CreateTime.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_CreateTime.setEnabled(false);
        jScrollPane5.setViewportView(TXT_CreateTime);

        jLabel8.setText("Create Date");

        TXT_CreateDate.setEditable(false);
        TXT_CreateDate.setBackground(new java.awt.Color(204, 204, 204));
        TXT_CreateDate.setEnabled(false);
        jScrollPane4.setViewportView(TXT_CreateDate);

        jLabel5.setText("Token No");

        TXT_CreateBy.setEditable(false);
        TXT_CreateBy.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_CreateBy.setEnabled(false);

        jLabel7.setText("Create By");

        TXT_TokenNo.setEditable(false);
        TXT_TokenNo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_TokenNo.setEnabled(false);
        jScrollPane3.setViewportView(TXT_TokenNo);

        jLabel4.setText("RC Number");

        jLabel6.setText("Slip Number");

        TXT_SlipNo.setEditable(false);
        TXT_SlipNo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_SlipNo.setEnabled(false);

        TXT_RC_NO.setEditable(false);
        TXT_RC_NO.setEnabled(false);

        jLabel12.setText("Charge Applied Or Not");

        TXT_CHARGEAPPLED.setEditable(false);
        TXT_CHARGEAPPLED.setBackground(new java.awt.Color(204, 204, 204));
        TXT_CHARGEAPPLED.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_CHARGEAPPLED.setEnabled(false);
        jScrollPane11.setViewportView(TXT_CHARGEAPPLED);

        TXT_VECHILE_TYPE.setEditable(false);
        TXT_VECHILE_TYPE.setBackground(new java.awt.Color(204, 204, 204));
        TXT_VECHILE_TYPE.setEnabled(false);
        jScrollPane12.setViewportView(TXT_VECHILE_TYPE);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10)
                                .addComponent(LBL_CreateTime)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel6)))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(TXT_CreateBy)
                            .addComponent(jScrollPane5)
                            .addComponent(jScrollPane4)
                            .addComponent(TXT_SlipNo)
                            .addComponent(TXT_RC_NO)
                            .addComponent(jScrollPane12)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TXT_SlipNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TXT_RC_NO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_CreateBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LBL_CreateTime, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setText("Final Entered Time");

        TXT_FinealEnterTime.setEditable(false);
        TXT_FinealEnterTime.setEnabled(false);
        jScrollPane7.setViewportView(TXT_FinealEnterTime);

        TXT_FinealEnterBy.setEditable(false);
        TXT_FinealEnterBy.setEnabled(false);

        jLabel16.setText("Final Entered Date");

        jLabel15.setText("Final Entered By");

        TXT_GateEntry.setEditable(false);
        TXT_GateEntry.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_GateEntry.setEnabled(false);
        TXT_GateEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXT_GateEntryActionPerformed(evt);
            }
        });

        LBL_GateEntry.setText("Gate Entry");

        TXT_Process.setEditable(false);
        TXT_Process.setEnabled(false);

        jLabel13.setText("Process");

        TXT_Machine.setEditable(false);
        TXT_Machine.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_Machine.setEnabled(false);

        jLabel11.setText("Machine");

        TXT_FinealEnterDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TXT_FinealEnterDate.setEnabled(false);
        jScrollPane6.setViewportView(TXT_FinealEnterDate);

        TXT_Charge.setEnabled(false);

        jLabel14.setText("Charge");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_Process)
                            .addComponent(TXT_Machine)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel17)))
                            .addComponent(LBL_GateEntry))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TXT_GateEntry)
                            .addComponent(TXT_FinealEnterBy, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(TXT_Charge)
                            .addComponent(jScrollPane7))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_Machine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_Process, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_GateEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LBL_GateEntry))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(TXT_FinealEnterBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TXT_Charge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(38, 38, 38))
        );

        jButtonPrint.setText("Print");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BtnPrintLayout = new javax.swing.GroupLayout(BtnPrint);
        BtnPrint.setLayout(BtnPrintLayout);
        BtnPrintLayout.setHorizontalGroup(
            BtnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BtnPrintLayout.createSequentialGroup()
                .addGap(354, 354, 354)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TXT_SLIP_NO, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(BtnPrintSlipNo, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BtnPrintLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(BtnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BtnPrintLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BtnPrintLayout.createSequentialGroup()
                        .addComponent(jButtonPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(424, 424, 424))))
        );
        BtnPrintLayout.setVerticalGroup(
            BtnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BtnPrintLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BtnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TXT_SLIP_NO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnPrintSlipNo)
                    .addComponent(jLabel2))
                .addGap(56, 56, 56)
                .addGroup(BtnPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonPrint)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }//GEN-END:initComponents

    private void BtnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLogOutActionPerformed
        LoginJFrame weightFrame = new LoginJFrame();
        weightFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        weightFrame.setSize(800, 610);
        weightFrame.setVisible(true);
        // super.setVisible(false);
        super.dispose();
    }//GEN-LAST:event_BtnLogOutActionPerformed

    private void BtnPrintSlipNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintSlipNoActionPerformed
   
        if (TXT_SLIP_NO.getText().isEmpty()) {

        } else {
            // VechileDetails(TXT_SLIP_NO.getText());
            try {
                oncallApiVehicleSlipNo(TXT_SLIP_NO.getText());
            } catch (JSONException e) {
            }
        }
    }//GEN-LAST:event_BtnPrintSlipNoActionPerformed

    private void TXT_GateEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXT_GateEntryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXT_GateEntryActionPerformed

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        printSlipjasper();
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jBtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBackActionPerformed
        // TODO add your handling code here:
        WeightMechineJFrame weightFrame = new WeightMechineJFrame(user_Name,unit_Code,machine_code,comportNo);
        weightFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        weightFrame.setSize(1200, 730);
        weightFrame.setVisible(true);
        // super.setVisible(false);
        super.dispose();
        
    }//GEN-LAST:event_jBtnBackActionPerformed






    public void VechileDetails(String slipNo) {
        Connection conn = null;
        Statement stmt = null;
        String query = null;
        WeightBridgeDao obj = new WeightBridgeDao();
        int count = 0;
        try {
            conn = obj.getStartConnection();
            stmt = conn.createStatement();
            query =
                "SELECT B.SLIP_NO, B.MACHINE_NO,NVL(B.TOKEN_NO,A.TOKEN_NO) TOKEN_NO, NVL(B.UNIT_CD,a.UNIT_CD) UNIT_CD, B.PROCESS_CODE, NVL(B.VEHICLE_NO,A.VEHICLE_NO) VEHICLE_NO, B.VEH_TYPE_CODE, B.RC_NO, B.WEIGHING_TYPE, B.GROSS_WEIGHT, \n" +
                "B.TERE_WEIGHT, B.NET_WEIGHT, B.ENTERED_BY, B.FINAL_ENTERED_BY, B.TROLLEY_NO, B.CHARGE, B.CHARGE_APPLICABLE,\n" +
                "B.PARTY,PRODUCT, B.GATE_ENTRY_NUMBER, B.REMARKS, B.CREATED_BY, TO_CHAR(B.CREATION_DATE, 'DD/MM/YYYY') CREATION_DATE, TO_CHAR(B.CREATION_DATE, 'HH24:MI:SS') CREATION_TIME,\n" +
                "TO_CHAR(B.FINAL_ENTERED_DATE, 'DD/MM/YYYY') FINAL_ENTERED_DATE, TO_CHAR(B.FINAL_ENTERED_DATE, 'HH24:MI:SS') FINAL_ENTERED_TIME,V.SUBTYPE_DESC\n" +
                " FROM TOKEN_INWARD A\n" + " LEFT JOIN WEIGHING_BRIDGE B ON (A.TOKEN_NO = B.TOKEN_NO )\n" +
                "  LEFT JOIN VEHICLE_SUBTYPE_MASTER V ON (V.TYPE_CODE = B.VEH_TYPE_CODE )\n" +
                " WHERE A.STATUS='I' and B.SLIP_NO is not null and  nvl(b.net_weight,0)>0 \n" + "and SLIP_NO='" +
                slipNo + "'";
            System.out.println("query--" + query);
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                count++;
                if (rs.getString("VEHICLE_NO") != null) {
                    vechileNo = rs.getString("VEHICLE_NO").toUpperCase();
                    TXT_VechileNo.setText(vechileNo);
                }
                if (rs.getString("SLIP_NO") != null) {
                    printslipNo = rs.getString("SLIP_NO").toUpperCase();
                    TXT_SlipNo.setText(slipNo);
                }
                if (rs.getString("TOKEN_NO") != null) {
                    tokenNo = rs.getString("TOKEN_NO").toUpperCase();
                    TXT_TokenNo.setText(tokenNo);
                }
                if (rs.getString("PARTY") != null) {
                    party = rs.getString("PARTY").toUpperCase();
                    TXT_Part.setText(party);
                }
                if (rs.getString("PRODUCT") != null) {
                    product = rs.getString("PRODUCT").toUpperCase();
                    TXT_Product.setText(product);
                }
                if (rs.getString("GROSS_WEIGHT") != null) {
                    grossWeight = rs.getString("GROSS_WEIGHT").toUpperCase();
                    TXT_GrossWeight.setText(grossWeight);
                }
                if (rs.getString("TERE_WEIGHT") != null) {
                    tareWeight = rs.getString("TERE_WEIGHT").toUpperCase();
                    TXT_TareWeight.setText(tareWeight);
                }
                if (rs.getString("NET_WEIGHT") != null) {
                    netWeight = rs.getString("NET_WEIGHT").toUpperCase();
                    TXT_NetWeight.setText(netWeight);
                }
                if (rs.getString("FINAL_ENTERED_DATE") != null && rs.getString("FINAL_ENTERED_TIME") != null) {
                    finaldate =
                        rs.getString("FINAL_ENTERED_DATE").toUpperCase() + " " + rs.getString("FINAL_ENTERED_TIME");
                    TXT_FinealEnterDate.setText(rs.getString("FINAL_ENTERED_DATE").toUpperCase());
                    TXT_FinealEnterTime.setText(rs.getString("FINAL_ENTERED_TIME").toUpperCase());
                    TXT_FinealEnterBy.setText(rs.getString("ENTERED_BY").toUpperCase());
                }
                if (rs.getString("CHARGE") != null) {
                    charge = rs.getString("CHARGE").toUpperCase();
                    TXT_Charge.setText(rs.getString("CHARGE").toUpperCase());
                }
                if (rs.getString("REMARKS") != null) {
                    remarks = rs.getString("REMARKS").toUpperCase();
                    //TXT_RE.setText(rs.getString("CHARGE").toUpperCase());
                }
                if (rs.getString("GATE_ENTRY_NUMBER") != null) {
                    gateNo = rs.getString("GATE_ENTRY_NUMBER").toUpperCase();
                    TXT_GateEntry.setText(gateNo);
                }
                if (rs.getString("RC_NO") != null) {

                    TXT_RC_NO.setText(rs.getString("RC_NO").toUpperCase());
                }
                if (rs.getString("MACHINE_NO") != null) {

                    TXT_Machine.setText(rs.getString("MACHINE_NO").toUpperCase());
                }
                if (rs.getString("SUBTYPE_DESC") != null) {
                    vechileType = rs.getString("SUBTYPE_DESC").toUpperCase();
                    TXT_VECHILE_TYPE.setText(vechileType);
                }
                if (rs.getString("PROCESS_CODE") != null) {

                    TXT_Process.setText(rs.getString("PROCESS_CODE").toUpperCase());
                }
                if (rs.getString("CREATED_BY") != null) {

                    TXT_CreateBy.setText(rs.getString("CREATED_BY").toUpperCase());
                }
                if (rs.getString("CREATION_DATE") != null) {

                    TXT_CreateDate.setText(rs.getString("CREATION_DATE").toUpperCase());
                }
                if (rs.getString("CREATION_TIME") != null) {

                    TXT_CreateTime.setText(rs.getString("CREATION_TIME").toUpperCase());
                    create = rs.getString("CREATION_DATE") + " " + rs.getString("CREATION_TIME");
                }
                //VechileTypejComboBox.addItem(rs.getString("CODE")+"-"+rs.getString("TYPE_DESC"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                stmt.close();
                conn.close();
            } catch (Exception ex) {

            }
        }
        if (count <= 0) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid Vehicle no / Slip No", "Message",
                                          JOptionPane.INFORMATION_MESSAGE);
            return;
        }

    }

    public void printSlipjasper() {
        System.out.println("call jasper----");
        InputStream input;
        try {
           // input = new FileInputStream("C:/Users/LENOVO/Desktop/mechine/Bridge_Entry.jasper");
            input = new FileInputStream("C:\\jasperfile\\Bridge_Entry.jasper");
            // input = new FileInputStream("C:/Users/Patanjali/Desktop/mechine/Bridge_Entry.jasper");
            JasperReport design = (JasperReport) JRLoader.loadObject(input);
            Map<String, Object> parameters = new HashMap<>();
            parameters.put("SlipNo", printslipNo);
            parameters.put("TokenNo", tokenNo);
            parameters.put("GateEntry", gateNo);
            parameters.put("GrossWeight", grossWeight);
            parameters.put("TareWeight", tareWeight);
            parameters.put("NetWeight", netWeight);
            parameters.put("Party", party);
            parameters.put("Remarks", remarks);
            parameters.put("TruckNo", vechileNo);
            parameters.put("TruckType", vechileType);
            parameters.put("CreatedOn", create);
            parameters.put("Final", finaldate);
            parameters.put("Charge", charge);
            parameters.put("Product", product);
            parameters.put("Copy", "Duplicate");

            //            parameters.put("SlipNo", "9393595435");
            //            parameters.put("TokenNo", "73453dgddf");
            //            parameters.put("GateEntry", "fdryeuryer");
            //            parameters.put("GrossWeight", "232424");
            //            parameters.put("TareWeight","856464");
            //            parameters.put("NetWeight", "9990");
            //            parameters.put("Party", "fghdfydffhfdfh");
            //            parameters.put("Remarks","dfhdfjhfdfhdfdfgfhdfd");
            //            parameters.put("TruckNo","PB09jyytV");
            //            parameters.put("TruckType", "10hb");
            //            parameters.put("CreatedOn", "20.09.2024 10:17:50");
            //            parameters.put("Final","20.09.2024 10:17:50");
            //            parameters.put("Charge", "90");
            //            parameters.put("Product", "dhfdfhgdfgfyfdf");
            //            parameters.put("Copy", "Orginal");
            net.sf.jasperreports.engine.JasperPrint print =
                JasperFillManager.fillReport(design, parameters, new JREmptyDataSource());
            // ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            // JasperExportManager.exportReportToPdfStream(print, byteArrayOutputStream);
            // byte pdf[] = JasperExportManager.exportReportToPdf(print);
            // JasperExportManager.exportReportToPdfFile(print, "C:/Users/LENOVO/Desktop/mechine/report.pdf");
            // Optional: Display the report in a viewer
            JasperViewer.viewReport(print, false);
            System.out.println("Path : " + input + " -------" + design + " param:");

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Message", JOptionPane.ERROR_MESSAGE);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Message", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrintSlip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrintSlip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrintSlip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrintSlip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrintSlip("","","","").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLogOut;
    private javax.swing.JPanel BtnPrint;
    private javax.swing.JButton BtnPrintSlipNo;
    private javax.swing.JLabel LBL_CreateTime;
    private javax.swing.JLabel LBL_GateEntry;
    private javax.swing.JTextPane TXT_CHARGEAPPLED;
    private javax.swing.JTextField TXT_Charge;
    private javax.swing.JTextField TXT_CreateBy;
    private javax.swing.JTextPane TXT_CreateDate;
    private javax.swing.JTextPane TXT_CreateTime;
    private javax.swing.JTextField TXT_FinealEnterBy;
    private javax.swing.JTextPane TXT_FinealEnterDate;
    private javax.swing.JTextPane TXT_FinealEnterTime;
    private javax.swing.JTextField TXT_GateEntry;
    private javax.swing.JTextPane TXT_GrossWeight;
    private javax.swing.JTextField TXT_Machine;
    private javax.swing.JTextPane TXT_NetWeight;
    private javax.swing.JTextField TXT_Part;
    private javax.swing.JTextField TXT_Process;
    private javax.swing.JTextField TXT_Product;
    private javax.swing.JTextField TXT_RC_NO;
    private javax.swing.JTextField TXT_SLIP_NO;
    private javax.swing.JTextField TXT_SlipNo;
    private javax.swing.JTextPane TXT_TareWeight;
    private javax.swing.JTextPane TXT_TokenNo;
    private javax.swing.JTextField TXT_TrollyNo;
    private javax.swing.JTextPane TXT_VECHILE_TYPE;
    private javax.swing.JTextField TXT_VechileNo;
    private javax.swing.JButton jBtnBack;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables
    
    
    public void oncallApiVehicleSlipNo(String slipNo) throws JSONException {

        // Try-catch block to handle potential IOExceptions and other exceptions
        List<PrintSlipDetails> filteredList = null;
        try {
           // URL url = new URL("http://182.16.9.100:7003/RestApiWeightBridge/resources/printslip");
            //URL url = new URL("http://10.0.6.204:7003/RestApiWeightBridge/resources/printslip");
            URL url = new URL("http://10.0.6.171:9090/RestApiWeightBridge/resources/printslip");
          
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("POST");
            con.setRequestProperty("Content-Type", "application/json");
            con.setRequestProperty("Accept", "application/json");
            con.setDoOutput(true);

            JsonObject jsonObject = new JsonObject();
            jsonObject.addProperty("slipNo", slipNo);


            // Convert JsonObject to JSON string
            String jsonInputString = jsonObject.toString();

            try (OutputStream os = con.getOutputStream()) {
                byte[] input = jsonInputString.getBytes("utf-8");
                os.write(input, 0, input.length);
            }

            // Read the response from the input stream
            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            StringBuilder response = new StringBuilder(); // Use StringBuilder for efficient string concatenation
            // Read the response line by line
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            // Close the BufferedReader
            in.close();
            // Convert the response to a string
            String jsonResponse = response.toString();
            System.out.println("jsonResponse--" + jsonResponse);
            JSONArray jsonArray = new JSONArray(jsonResponse);
             int count= jsonArray.length();
            if(count<=0){
                JOptionPane.showMessageDialog(null, "Please Enter Valid  Slip No", "Message", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Loop through each element in the array (each vehicle entry)
            for (int i = 0; i < jsonArray.length(); i++) {
                JSONObject rs = jsonArray.getJSONObject(i);
                try{
                if (rs.getString("vehicleNo") != null) {
                    vechileNo = rs.getString("vehicleNo").toUpperCase();
                    TXT_VechileNo.setText(vechileNo);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("slipNo") != null) {
                    printslipNo = rs.getString("slipNo").toUpperCase();
                    TXT_SlipNo.setText(slipNo);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("tokenNo") != null) {
                    tokenNo = rs.getString("tokenNo").toUpperCase();
                    TXT_TokenNo.setText(tokenNo);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("party") != null) {
                    party = rs.getString("party").toUpperCase();
                    TXT_Part.setText(party);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("product") != null) {
                    product = rs.getString("product").toUpperCase();
                    TXT_Product.setText(product);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("grossWeight") != null) {
                    grossWeight = Integer.toString(rs.getInt("grossWeight"));
                    TXT_GrossWeight.setText(grossWeight);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("tereWeight") != null) {
                    tareWeight = rs.getString("tereWeight").toUpperCase();
                    TXT_TareWeight.setText(tareWeight);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("netWeight") != null) {
                    netWeight = rs.getString("netWeight").toUpperCase();
                    TXT_NetWeight.setText(netWeight);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("finalEnteredDate") != null && rs.getString("finalEnteredTime") != null) {
                    finaldate =
                        rs.getString("finalEnteredDate").toUpperCase() + " " + rs.getString("finalEnteredTime");
                    TXT_FinealEnterDate.setText(rs.getString("finalEnteredDate").toUpperCase());
                    TXT_FinealEnterTime.setText(rs.getString("finalEnteredTime").toUpperCase());
                    TXT_FinealEnterBy.setText(rs.getString("finalEnteredBy").toUpperCase());
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("charge") != null) {
                    charge = rs.getString("charge").toUpperCase();
                    TXT_Charge.setText(rs.getString("charge").toUpperCase());
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("remarks") != null) {
                    remarks = rs.getString("remarks").toUpperCase();
                    //TXT_RE.setText(rs.getString("CHARGE").toUpperCase());
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("gateEntryNumber") != null) {
                    gateNo = rs.getString("gateEntryNumber").toUpperCase();
                    TXT_GateEntry.setText(gateNo);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("rcNo") != null) {

                    TXT_RC_NO.setText(rs.getString("rcNo").toUpperCase());
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("machineNo") != null) {

                    TXT_Machine.setText(rs.getString("machineNo").toUpperCase());
                }
                }catch(Exception ex){
                    
                }
                
                try{
                if (rs.getString("subtypeDesc") != null) {
                    vechileType = rs.getString("subtypeDesc").toUpperCase();
                    TXT_VECHILE_TYPE.setText(vechileType);
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("processCode") != null) {

                    TXT_Process.setText(rs.getString("processCode").toUpperCase());
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("createdBy") != null) {

                    TXT_CreateBy.setText(rs.getString("createdBy").toUpperCase());
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("creationDate") != null) {

                    TXT_CreateDate.setText(rs.getString("creationDate").toUpperCase());
                }
                }catch(Exception ex){
                    
                }
                try{
                if (rs.getString("creationTime") != null) {

                    TXT_CreateTime.setText(rs.getString("creationTime").toUpperCase());
                    create = rs.getString("creationDate") + " " + rs.getString("creationTime");
                }
                }catch(Exception ex){
                    
                }
                
            }


        } catch (IOException e) {
            // Print the exception message if an error occurs
            System.err.println("Error during API call: " + e.getMessage());
            e.printStackTrace();
        }


    }
}
